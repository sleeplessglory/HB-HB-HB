/*External CSS (within .css file)*/
.lyrics {
    text-align: center;
    font-size: 20px;
}

.mv-button { /* "." used for classes */
cursor: pointer;
border-style: solid;
border-color:rgb(0, 119, 255);
background-color: rgb(13, 22, 192);
color:white;
border-radius: 20px;
height:40px;
width: 185px;
font-size:17px;
font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

.polaroid1 {
    background-color: rgb(176, 235, 254);
    width: 400px;
    height: 550px;
    margin-left: 64px;
    margin-top: 50px;
    margin-bottom: 70px;
    position: relative;
    box-shadow: 7px 6px 7px gray;
    display: inline-block;
}
#ph1 {
    position: absolute;
    top: 40px;
    left: 50px;
    
}
.polaroid2 {
    background-color: rgb(176, 235, 254);
    width: 400px;
    height: 550px;
    margin-left: 64px;
    margin-top: 50px;
    margin-bottom: 70px;
    position: relative;
    box-shadow: 7px 6px 7px gray;
    display: inline-block;
}
#ph2 {
    position: absolute;
    top: 40px;
    left: 50px;
    
}
.polaroid3 {
    background-color: rgb(176, 235, 254);
    margin-left: 64px;
    margin-top: 50px;
    margin-bottom: 70px;
    width: 400px;
    height: 550px;
    position: relative;
    display: inline-block;
    box-shadow: 7px 6px 7px gray;
}
#ph3 {
    position: absolute;
    top: 40px;
    left: 50px;
}
.polaroid4 {
    display: inline-block;
    position: relative;
    background-color: rgb(176, 235, 254);
    margin-left: 64px;
    margin-top: 50px;
    margin-bottom: 70px;
    width: 400px;
    height: 550px;
    box-shadow: 7px 6px 7px gray;
}
#ph4 {
    position: absolute;
    top: 40px;
    left: 50px;
}
.polaroid5 {
    display: inline-block;
    position: relative;
    background-color: rgb(106, 212, 248);
    margin-left: 64px;
    margin-bottom: 70px;
    width: 400px;
    height: 550px;
    box-shadow: 7px 6px 7px gray;
}
#ph5 {
    position: absolute;
    top: 40px;
    left: 50px;
}
/*
Fonts in CSS.
https://fonts.google.com for choosing fonts to connect via API or dowload and use locally*/
@font-face { /*In case we wanna use fonts locally without connecting to google's API*/
    src: url(fonts/RobotoSlab-VariableFont_wght.ttf);
    font-family: Roboto-Slab; /*known as*/
}
@font-face {
    src: url(fonts/PlaywriteDKLoopet-VariableFont_wght.ttf);
    font-family: Playwrite-DK-Loopet;
}
/*Fonts in CSS*/
#title-header { /* "#" used for IDs */
    font-family: Playwrite-DK-Loopet,Verdana, Arial; /*If the 1st font can't be displayed, the 2nd will be chosen instead*/
    font-size: 2em; /*1em = 100% or use pixels*/
}
.author {
    font-family: Roboto-Slab, "Times New Roman", Georgia;
    font-weight: normal; /*or bold*/
    font-style: italic;
}
body { /*Nothing used for tags*/
    margin: 0px;
}
/*Borders in CSS*/
ol {
    border-style: groove; /*none, solid, dashed, dotted, double, ridge, inset, outset, etc.*/
    border-width: 5px;
    border-color: hsl(0, 87%, 44%);
    /*border: groove 5px hsl(0, 87%, 44%); same as 3 lines above except the radius below*/
    border-radius: 7px;
}
dl {
    border-bottom: 4px solid gray;
    border-top: 4px dashed rgb(34, 34, 174);
    border-left: 4px dotted rgb(10, 112, 26);
    border-right: 4px ridge rgb(160, 19, 19);
    border-radius: 10px;
}
/*Shadows in CSS*/
#ship-to-wreck {
     /*The first number's for horizontal offset, the second's for vertical offset and the third's for blur*/
    text-shadow: 5px 4px 6px rgb(231, 21, 21), -5px -4px 6px rgb(32, 17, 251);
    /*For the second shadow separate them with ",". Negative offset values change the directory*/
}

/*Margin in CSS*/
#box1 {
    height: 200px;
    width: 300px;
    box-shadow: 9px 7px 7px;
    margin: auto; /*Keeps the element in the middle*/
}
/*Margin in CSS*/
#box2 {
    margin-left: 50px; /*Margin for each element is individual and ain't related to one another*/
    margin: 20px; /*The overall margin is only being used despite other margin lines*/
}
/*Margin in CSS*/
#box3 {
    margin-right: auto; /*Always attached to the left side*/
    height: 360px;
    width: 540px;
    box-shadow: 4px 5px 4px gray;
}

.photo-description {
    font-size: 32px;
}
/*Float property in CSS*/
#img1 {
    float: left; /*The image is on the left side. Everything below the image on the page will be flowing on the right side of the image*/
    margin-right: 11px;
}
/*Float property in CSS*/
#img2 {
    float: right; /*Check out draft.html file for display property with "flow-root" value*/
    margin-left: 11px;
}
/*Overflow property*/
.overflow {
    border: 2px dotted;
    height: 100px;
    width: 120px;
    display: inline-block;
    margin-right: 35px;
}
#over1 {
    overflow: visible; /*Nothing's changed*/
}
#over2 {
    overflow: hidden;
}
#over3 {
    overflow: clip; /*Used with the 2nd property below*/
    overflow-clip-margin: 40px; /*Shows the allowed amount of pixels to be displayed*/
}
#over4 {
    overflow: scroll; /*Lets to scroll the rest of the content*/
}
#over5 {
    overflow: auto; /*Shows the scroll bar if needed and doesn't show if no need*/
}
/*Display property in CSS*/
#div1 {
    height: 100px;
    width: 120px;
    background-color: #ff1515;
    display: inline-block; /*"block" value is same as a default <div>, "inline" is same as <span>, "none" removes*/
}
#span1 {
    height: 100px;
    width: 120px;
    background-color: rgb(94, 118, 255);
    display: inline-block;
    visibility: hidden; /*block is hidden but still takes up its space on the page*/
}
#span2 {
    height: 100px;
    width: 120px;
    background-color: rgb(94, 118, 255);
    display: inline-block;
}
/*Height and width properties*/
.h-w {
    border: 2px solid;
    height: auto;
    width: 50%;
    float: left; /*won't work if border width takes up the space (contradicts 50% of width above)*/
    padding: 25px;
    box-sizing: border-box; /*resolves the issue above*/
    text-align: center;
    
    max-width: 25%; /*even though we stated above that it's 50%. Same with "min-width"*/
    min-height: 50%;

    background-color: white;
}   
* { /*all the elements*/
    box-sizing: border-box; /*for all elements width/height will be as they were set (even if we correct border/padding, the 'box' size will remain the same. Usually when border/padding's added, height/weight starts to enlarge. In other words, we have to change the overall width/height before increasing border/padding*/
}
.container4boxes {
    background-color: gray; /*can't see due to boxes taking up the whole space*/
    height: 100vh; /*viewport height*/
}
/*Position property*/
#box4 {
    position: relative;
    top: 600px;
    left: 400px;
    width: 200px;
    height: 200px;
    background-color: rgb(109, 26, 187);
}
#box5 {
    /*Let's turn it off now, kind of annoying later on. position: fixed;*/
    top: 0px;
    right: 0;
    width: 250px;
    height: 250px;
    background-color: rgb(29, 26, 187);
}
#box6 {
    position: relative; /*"sticky" value is similar to 'fixed': we have some space preserved. When we scroll through it, it gets stuck at the corner*/
    bottom: 200px;
    left: 150px;
    width: 200px;
    height: 200px;
    background-color: rgb(187, 26, 26);
}
#box7 {
    position: absolute; /*"static" will get it back to the default position*/
    width: 100px;
    height: 100px;
    background-color: rgb(33, 135, 18);
    top: 50px;
    left: 50px;
}