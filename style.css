/*External CSS (within .css file)*/
.lyrics {
    text-align: center;
    font-size: 20px;
}

.mv-button { /* "." used for classes */
cursor: pointer;
border-style: solid;
border-color:rgb(0, 119, 255);
background-color: rgb(13, 22, 192);
color:white;
border-radius: 20px;
height:40px;
width: 185px;
font-size:17px;
font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

.polaroid1 {
    background-color: rgba(176, 234, 254, 0.812);
    width: 400px;
    height: 550px;
    margin-left: 64px;
    margin-top: 50px;
    margin-bottom: 70px;
    position: relative;
    box-shadow: 7px 6px 7px gray;
    display: inline-block;
}
#ph1 {
    position: absolute;
    top: 40px;
    left: 50px;
    /*opacity: 0.812; same as alpha channel in rgba for colours, but for images*/ 
}
.polaroid2 {
    background-color: rgba(176, 234, 254, 0.812); /*alpha channel in rgba stands for the opacity of the colour*/
    width: 400px;
    height: 550px;
    margin-left: 64px;
    margin-top: 50px;
    margin-bottom: 70px;
    position: relative;
    box-shadow: 7px 6px 7px gray;
    display: inline-block;
}
#ph2 {
    position: absolute;
    top: 40px;
    left: 50px;
    
}
.polaroid3 {
    background-color: rgba(176, 235, 254, 0.812);
    margin-left: 64px;
    margin-top: 50px;
    margin-bottom: 70px;
    width: 400px;
    height: 550px;
    position: relative;
    display: inline-block;
    box-shadow: 7px 6px 7px gray;
}
#ph3 {
    position: absolute;
    top: 40px;
    left: 50px;
}
.polaroid4 {
    display: inline-block;
    position: relative;
    background-color: rgba(176, 235, 254, 0.812);
    margin-left: 64px;
    margin-top: 50px;
    margin-bottom: 70px;
    width: 400px;
    height: 550px;
    box-shadow: 7px 6px 7px gray;
}
#ph4 {
    position: absolute;
    top: 40px;
    left: 50px;
}
.polaroid5 {
    display: inline-block;
    position: relative;
    background-color: rgba(106, 213, 248, 0.812);
    margin-left: 64px;
    margin-bottom: 70px;
    width: 400px;
    height: 550px;
    box-shadow: 7px 6px 7px gray;
}
#ph5 {
    position: absolute;
    top: 40px;
    left: 50px;
}
dl {
    background-color: rgba(161, 168, 242, 0.64);
}
/*
Fonts in CSS.
https://fonts.google.com for choosing fonts to connect via API or dowload and use locally*/
@font-face { /*In case we wanna use fonts locally without connecting to google's API*/
    src: url(fonts/RobotoSlab-VariableFont_wght.ttf);
    font-family: Roboto-Slab; /*known as*/
}
@font-face {
    src: url(fonts/PlaywriteDKLoopet-VariableFont_wght.ttf);
    font-family: Playwrite-DK-Loopet;
}
/*Fonts in CSS*/
#title-header { /* "#" used for IDs */
    font-family: Playwrite-DK-Loopet,Verdana, Arial; /*If the 1st font can't be displayed, the 2nd will be chosen instead*/
    font-size: 2em; /*1em = 100% or use pixels*/
}
.author {
    font-family: Roboto-Slab, "Times New Roman", Georgia;
    font-weight: normal; /*or bold*/
    font-style: italic;
}
body { /*Nothing used for tags*/
    margin: 0px;
}
/*Borders in CSS*/
ol {
    border-style: groove; /*none, solid, dashed, dotted, double, ridge, inset, outset, etc.*/
    border-width: 5px;
    border-color: hsl(0, 87%, 44%);
    /*border: groove 5px hsl(0, 87%, 44%); same as 3 lines above except the radius below*/
    border-radius: 7px;
}
dl {
    border-bottom: 4px solid gray;
    border-top: 4px dashed rgb(34, 34, 174);
    border-left: 4px dotted rgb(10, 112, 26);
    border-right: 4px ridge rgb(160, 19, 19);
    border-radius: 10px;
}
/*Shadows in CSS*/
#ship-to-wreck {
     /*The first number's for horizontal offset, the second's for vertical offset and the third's for blur*/
    text-shadow: 5px 4px 6px rgb(231, 21, 21), -5px -4px 6px rgb(32, 17, 251);
    /*For the second shadow separate them with ",". Negative offset values change the directory*/
}

/*Margin in CSS*/
#box1 {
    height: 200px;
    width: 300px;
    box-shadow: 9px 7px 7px;
    margin: auto; /*Keeps the element in the middle*/
}
/*Margin in CSS*/
#box2 {
    margin-left: 50px; /*Margin for each element is individual and ain't related to one another*/
    margin: 20px; /*The overall margin is only being used despite other margin lines*/
}
/*Margin in CSS*/
#box3 {
    margin-right: auto; /*Always attached to the left side*/
    height: 360px;
    width: 540px;
    box-shadow: 4px 5px 4px gray;
}

.photo-description {
    font-size: 32px;
}
/*Float property in CSS*/
#img1 {
    float: left; /*The image is on the left side. Everything below the image on the page will be flowing on the right side of the image*/
    margin-right: 11px;
}
/*Float property in CSS*/
#img2 {
    float: right; /*Check out draft.html file for display property with "flow-root" value*/
    margin-left: 11px;
}
/*Overflow property*/
.overflow {
    border: 2px dotted;
    height: 100px;
    width: 120px;
    display: inline-block;
    margin-right: 35px;
}
#over1 {
    overflow: visible; /*Nothing's changed*/
}
#over2 {
    overflow: hidden;
}
#over3 {
    overflow: clip; /*Used with the 2nd property below*/
    overflow-clip-margin: 40px; /*Shows the allowed amount of pixels to be displayed*/
}
#over4 {
    overflow: scroll; /*Lets to scroll the rest of the content*/
}
#over5 {
    overflow: auto; /*Shows the scroll bar if needed and doesn't show if no need*/
}
/*Display property in CSS*/
#div1 {
    height: 100px;
    width: 120px;
    background-color: #ff1515;
    display: inline-block; /*"block" value is same as a default <div>, "inline" is same as <span>, "none" removes*/
}
#span1 {
    height: 100px;
    width: 120px;
    background-color: rgb(94, 118, 255);
    display: inline-block;
    visibility: hidden; /*block is hidden but still takes up its space on the page*/
}
#span2 {
    height: 100px;
    width: 120px;
    background-color: rgb(94, 118, 255);
    display: inline-block;
}
/*Height and width properties*/
.h-w {
    border: 2px solid;
    height: auto;
    width: 50%;
    float: left; /*won't work if border width takes up the space (contradicts 50% of width above)*/
    padding: 25px;
    box-sizing: border-box; /*resolves the issue above*/
    text-align: center;
    
    max-width: 25%; /*even though we stated above that it's 50%. Same with "min-width"*/
    min-height: 50%;

    background-color: white;
}   
* { /*all the elements*/
    box-sizing: border-box; /*for all elements width/height will be as they were set (even if we correct border/padding, the 'box' size will remain the same. Usually when border/padding's added, height/weight starts to enlarge. In other words, we have to change the overall width/height before increasing border/padding*/
}
.container4boxes {
    background-color: gray; /*can't see due to boxes taking up the whole space*/
    height: 100vh; /*viewport height*/
}
/*Position property*/
#box4 {
    position: relative;
    top: 600px;
    left: 400px;
    width: 200px;
    height: 200px;
    background-color: rgb(109, 26, 187);
}
#box5 {
    /*Let's turn it off now, kind of annoying later on. position: fixed;*/
    top: 0px;
    right: 0;
    width: 250px;
    height: 250px;
    background-color: rgb(29, 26, 187);
}
#box6 {
    position: relative; /*"sticky" value is similar to 'fixed': we have some space preserved. When we scroll through it, it gets stuck at the corner*/
    bottom: 200px;
    left: 150px;
    width: 200px;
    height: 200px;
    background-color: rgb(187, 26, 26);
}
#box7 {
    position: absolute; /*"static" will get it back to the default position*/
    width: 100px;
    height: 100px;
    background-color: rgb(33, 135, 18);
    top: 50px;
    left: 50px;
}
/*Background images*/
#index { /*<body> with "index" id*/
    background-image: url(images/What+Kind+of+Man+_+St+Jude+15.jpg);
    background-repeat: no-repeat;
    background-position: center;
    background-attachment: fixed;
    background-size: cover;
}
#phshoot {
    background-image: url(images/What+Kind+of+Man+_+St+Jude+NN.jpg);
    background-repeat: no-repeat;
    background-position: center;
    background-attachment: fixed;
    background-size: cover;
}
/*Combinators*/
#container-combinators {
    border: 2px solid; /*To distinguish*/
}
#container-combinators p { /*Descendant combinator: an empty space between one and another selectors. Applied to children and their children, etc.*/
    background-color: yellow;
}
#container-combinators > p { /*Child combinator: ">" between one and another selectors. Applied to children only*/
    background-color: purple;
}
#container-combinators ~ p { /*General sibling(s) combinator: "~" between the selectors is needed. Applied to sibling(s) only*/
    background-color: gray;
}
#container-combinators + p { /*Adjacent sibling combinator: "+" between the selectors is used. Applied to the nearest sibling only*/
    background-color: green;
}
/*Pseudo-classes*/
header a { /*Any "anchor" tags within the <header> tags ("descendant" combinator). "link" pseudo-class is NOT used*/
    color: rgb(193, 44, 178);
}
/*a:link { With this example color change will be applied only to the links leading outside of the website. Local links for the website won't be changed!
    color: rgb(185, 51, 172);
}*/
header a:hover { /*Any <a> tags within <header> tags will be changed when we "hover" (pseudo-class) over them*/
    color: rgb(225, 62, 209);
    font-size: 1.1em;
}
header a:active { /*"active" pseudo-class stands for the moment, when users click on the link and holds it*/
    color: rgb(23, 40, 150); 
    font-size: 1.1em;
}
header a:visited { /*"visited" pseudo-class stands for the state when the link is visited*/
    color:rgb(108, 107, 107);
}
/*We can use pseudo-classes everywhere, even without combinators*/
#pseudo li:hover {
    background-color: yellow;
}
#pseudo li:not(:hover) { /*In this case we use "not" pseudo-class in order to specify the colours when we do NOT hover over the list items*/
    background-color: rgb(23, 32, 122);
}
#pseudo li:nth-child(2n+1):hover{ /*"nth-child()" pseudo-class picks only specified elements. If the value is (odd), then all odd elements will be chosen, same with (even), (2), (5), (3n) meaning every 3rd element, (2n+1) meaning to start with the 1st and then every second, etc.*/
    background-color: rgb(184, 58, 189);
}
#greeting-div p {
    background-color: rgb(102, 172, 238);
    padding: 10px;
    display: none; /*We hide it in order to show with the pseudo-class example below*/
}
#greeting-div:hover p { /*This time we wrote "hover" pseudo-class after the <div> ID name, because we can't hover over the hidden <p>*/
    display: block; /*Now it's visible*/
}
/*Pseudo-elements in CSS*/
dd::first-line { /*In description definitions the first line will be modified*/
    background-color: rgba(20, 151, 31, 0.537);
    color: white;
}
dt::first-letter { /*First letter of every description term is coloured*/
    font-size: 1.7em;
    color: rgb(161, 19, 19);
}
dd::selection { /*If we select ("selection" pseudo-element) any text in description definition, it will be coloured as white with grey background colour*/
    color: white;
    background-color: rgb(103, 98, 98);
}
#ul-albvers > li::before { /*For any list element in unordered list set anything "before" (pseudo-element) or "after" the text. ">" (child combinator) is used, so, we don't modify another grandchildren list elements*/
    content: "🎙"; /*Set "" and between them press "Win" + ":"*/
    font-size: 1.25em; /*Size of the content*/
}
#ul-albvers > li::marker { /*"marker" (pseudo-element) modifies the black dot marker before (children) list items*/
    content: ""; /*Any emoji can be pasted or leave it blank to remove those markers*/
    color: rgb(187, 30, 30); /*Colour of some markers can be modified too*/
}
/*Pagination in CSS*/
.pagination {
    text-align: center;
}
.pagination a { /*Styling the links within the <div>*/
    color: white;
    text-decoration: none; /*Elimitaing underlining of the links*/
    padding: 22px 30px; /*22px by 30px*/
    display: inline-block; /*So, we can adjust width and height now*/
    background-color: rgb(25, 25, 152);
    margin-bottom: 20px;
}
.pagination a.active { /*Within the "pagination" class find any <a> with "active" class spesified. To specify the class of the tag use "." in between*/
    background-color: rgb(10, 10, 78);
    font-weight: bold;
}
.pagination a:hover:not(.active) { /*In "pagination" class find any <a> and modify them when we "hover" over them while they're NOT "active" (class!="active") atm*/
    background-color: rgb(143, 31, 31);
}
/*Dropdown menu*/
.dropdown {
    display: inline-block;
}
.dropdown button {
    background-color: hsl(0, 0%, 80%);
    padding: 10px 15px;
    border: none;
    cursor: pointer;
}
.dropdown a {
    display: block;
    color: black;
    text-decoration: none;
    padding: 10px 15px;
}
.dropdown .content {
    display: none;
    position: absolute;
    background-color: hsl(0, 0%, 95%);
    min-width: 100px;
    box-shadow: 2px 2px 5px hsla(0, 0%, 0%, 0.8);
}
.dropdown:hover .content{
    display: block;
}
.dropdown:hover button {
    background-color: hsl(0, 0%, 70%);
}
.dropdown a:hover {
    background-color: hsl(0, 0%, 90%);
} /*No comment left on this part since it was all explained earlier*/
/*Navigation bar in CSS*/
#photoshoot-1-header {
    text-align: center;
}
.navbar ul {
    list-style-type: none; /*Another or even a proper way to remove the marks of the list items*/
    background-color: hsl(240, 85%, 30%);
    padding: 0px;
    margin: 0px;
    overflow: hidden;
}
.navbar a {
    color: white;
    text-decoration: none;
    padding: 15px;
    display: block;
    text-align: center;
}
.navbar a:hover {
    background-color: hsl(240, 86%, 20%);
}
.navbar li {
    float: left;
}
/*Already written above
body {
    margin: 0px;
}*/
main {
    margin: 0px; /*If we want margins around the main content, we can set it here. No need atm*/
}
